plugins {
    id "com.android.application"
    // START: FlutterFire Configuration
    id 'com.google.gms.google-services'
    // END: FlutterFire Configuration
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

// Load the properties files which define the keystores and keystore passwords
// to use for signing debug and release builds. If the properties files do not
// exist, fall back to using a default properties file which specifies using
// the personal debug keystore auto-generated by the Android SDK build tools.
// See here for details on the default debug keystore:
// https://developer.android.com/studio/publish/app-signing#debug-mode
def debugKeystorePropsFile = rootProject.file("keystore/debug.keystore.properties")
if (!debugKeystorePropsFile.exists()) {
    debugKeystorePropsFile = rootProject.file('keystore/default-debug.keystore.properties')
}
def debugKeystoreProps = new Properties()
debugKeystoreProps.load(new FileInputStream(debugKeystorePropsFile))
def uploadKeystorePropsFile = rootProject.file('keystore/upload.keystore.properties')
if (!uploadKeystorePropsFile.exists()) {
    uploadKeystorePropsFile = rootProject.file('keystore/default-debug.keystore.properties')
}
def uploadKeystoreProps = new Properties()
uploadKeystoreProps.load(new FileInputStream(uploadKeystorePropsFile))

android {
    namespace = "com.buntagon.quickshop"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = "25.1.8937393"

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17
    }

    signingConfigs {

        // Using a common debug keystore prevents developers from having to 
        // register the SHA1 fingerprint of their personal debug keystore
        // with Firebase in order to use google sign in.
        debug {
            keyAlias debugKeystoreProps['debugKeyAlias']
            keyPassword debugKeystoreProps['debugKeyPassword']
            // Manually replace ~ with system home directory for cross-platform support
            // (Windows does not recognise it)
            storeFile file(debugKeystoreProps['debugKeyStore'].replace('~', System.properties['user.home']))
            storePassword debugKeystoreProps['debugStorePassword']
        }

        release {
            keyAlias uploadKeystoreProps['uploadKeyAlias']
            keyPassword uploadKeystoreProps['uploadKeyPassword']
            storeFile file(uploadKeystoreProps['uploadKeyStore'].replace('~', System.properties['user.home']))
            storePassword uploadKeystoreProps['uploadStorePassword']
        }
    }

    defaultConfig {
        applicationId = "com.buntagon.quickshop"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdk = 23 // Required for firebase_auth
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName
    }

    buildTypes {
        release {
            signingConfig = signingConfigs.release
        }
    }

    flavorDimensions "env"

    productFlavors {
        dev {
            dimension "env"
            applicationIdSuffix ".dev"
            versionNameSuffix "-dev"
            resValue "string", "app_links_domain", "dev.quickshop.buntagon.com"
            resValue "string", "app_links_fallback_host", "dev.app"
        }
        prod {
            dimension "env"
            resValue "string", "app_links_domain", "quickshop.buntagon.com"
            resValue "string", "app_links_fallback_host", "app"
        }
    }
}

flutter {
    source = "../.."
}
