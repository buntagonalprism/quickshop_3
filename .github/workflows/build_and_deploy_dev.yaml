name: Dev - Build and Deploy
on:
  workflow_dispatch:

jobs:
  test_and_build:
    runs-on: ubuntu-latest
    environment: 'Development'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ vars.FLUTTER_VERSION }}
          channel: 'stable'

      - run: flutter doctor -v
      - run: flutter test

      - name: Load app secret files and signing keystore
        shell: bash
        env:
          APP_SECRETS: ${{ secrets.APP_SECRETS }}
          GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}
          UPLOAD_KEYSTORE: ${{ secrets.UPLOAD_KEYSTORE_B64 }}
          UPLOAD_KEYSTORE_PROPS: ${{ secrets.UPLOAD_KEYSTORE_PROPS_B64 }}
        run: |
          echo "$APP_SECRETS" >> settings/app_secrets_dev.json
          echo "$GOOGLE_SERVICES_JSON" >> android/app/src/dev/google-services.json
          echo "$UPLOAD_KEYSTORE" | base64 -d > android/keystore/upload.keystore
          echo "$UPLOAD_KEYSTORE_PROPS" | base64 -d > android/keystore/upload.keystore.properties

      - name: Determine build version
        shell: bash 
        run: |
          # Extract the version from pubspec.yaml
          pubspec_version=$(grep '^version:' pubspec.yaml | awk '{print $2}')

          # Define a regex pattern for major.minor.patch format
          pattern="^[0-9]+\.[0-9]+\.[0-9]+$"

          # Check if the version matches the pattern
          if [[ $pubspec_version =~ $pattern ]]; then
            echo "Building with semantic version: $pubspec_version"
          else
            echo "Version $pubspec_version from pubspec.yaml is NOT in the correct format (major.minor.patch)."
            exit 1
          fi
          echo "pubspec_version=$pubspec_version" >> $GITHUB_ENV

          tag_version="$pubspec_version-dev.${{ github.run_number }}"

          echo "Commit ${{ github.sha }} will be tagged with: $tag_version"
          echo "tag_version=$tag_version" >> $GITHUB_ENV

      - name: Tag commit
        uses: actions/github-script@v7
        with: 
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/${{ env.tag_version }}',
              sha: context.sha
            })

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto' 
          java-version: '21'
          cache: gradle

      - name: Build dev android apk
        run: flutter build apk --release --flavor=dev --dart-define-from-file=settings/app_settings_dev.json --dart-define-from-file=settings/app_secrets_dev.json --build-number=${{ github.run_number }}
        
      - name: Rename dev apk
        run: |
          apk_name="quickshop-dev-$pubspec_version.${{ github.run_number }}.apk"
          echo "apk_name=$apk_name" >> $GITHUB_ENV
          mv build/app/outputs/flutter-apk/app-dev-release.apk "build/app/outputs/flutter-apk/$apk_name"
        
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-dev
          path: build/app/outputs/flutter-apk/${{ env.apk_name }}
      
      - name: Install Firebase CLI
        run: curl -sL https://firebase.tools | bash
        
      - name: Upload dev apk to Firebase App Distribution
        shell: bash
        env:
          SERVICE_ACCOUNT: ${{ secrets.FB_APP_DIST_CREDENTIALS }}
        run: |
          echo "$SERVICE_ACCOUNT" >> google_service_account.json
          export GOOGLE_APPLICATION_CREDENTIALS=google_service_account.json
          firebase --version
          firebase appdistribution:distribute build/app/outputs/flutter-apk/${{ env.apk_name }} --app ${{ vars.ANDROID_FIREBASE_APP_ID }} --release-notes "Dev Build ${{ env.tag_version }}" --groups ${{ vars.APP_TESTER_GROUPS }}